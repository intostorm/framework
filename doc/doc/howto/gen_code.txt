#title: 如何生成代码片段
#index:0,3

-----------------------------------------------------------------------
# 创建开发使用的数据库, 此处以mysql 为例

	{{{
	mysql> create database sample <br/>
	mysql> create table `contact` ( \ <br/>
	  `record_id` int(11) not null auto_increment comment '主键', \ <br/>
	  `name` varchar(255) default null comment '姓名', \ <br/>
	  `sex` varchar(255) default null comment '性别', \ <br/>
	  `phone` varchar(255) default null comment '电话', \ <br/>
	  `areacode` varchar(255) default null comment '地区', \ <br/>
	  `address` varchar(255) default null comment '地址', \ <br/>
	  primary key (`record_id`) \ <br/>
	) engine=innodb default charset=utf8;

	}}}

# 用生成工具tools生成代码片段（可选）

	打开tools/src/main/resources/codegen-context.xml，添加

	{{{
	<bean id="sample" class="com.ccesun.framework.tools.codegen.SimpleCodeGenConfiguation">
		<property name="freemarkerConfig" ref="freemarkerConfig" />
		<!-- 引用 tools/src/main/resources/datasource-context.xml 中设置的dataSource -->
		<property name="dataSource" ref="dataSourceSample" /> 
		<!-- 
			设成true生成全部对象， materials 中的条目会被忽略 
			设成false生成 materials 中的条目 
		-->
		<property name="allArticfacts" value="false" />
		<!-- 输出的目录 -->
		<property name="baseOutput" value="codegen/sample" />
		<!-- 基础包名 -->
		<property name="basePackage" value="com.ccesun.sample" />
		<!-- 指定本次生成的对象，当 allArticfacts 为false 时-->
	    <property name="materials">
	        <list> 
	            <bean p:domainName="Contact" p:tableName="contact" class="com.ccesun.framework.tools.codegen.Material" />
	        </list>
	    </property>
	</bean>
	}}}

# 修改<bean id="codeGen" class="com.ccesun.framework.tools.codegen.CodeGen">中<property name="config" ref="sample" />

	{{{
	<bean id="codeGen" class="com.ccesun.framework.tools.codegen.CodeGen">
		<property name="config" ref="sample" />
	</bean>
	}}}

# 运行com.ccesun.framework.tools.runner.CodeGenRunner

# 在tools/codegen下找到生成的代码片段
	
	
	